@using LoopyNFT.WebApp.Entities
@using LoopyNFT.WebApp.Services
@using MudBlazor
@using Microsoft.AspNetCore.Identity
@inject IAccountService AccountService
@inject ISnackbar SnackBar
<MudDialog>
    <DialogContent>
        <form action="/user/signin" method="post">
            <div class="form-group">
                <p> Username </p>
                <input id="username" Name="username" />
            </div>
            <div class="form-group">
                <input type="password" id="password" />
            </div>
            <div class="form-group">
                <input type="checkbox" id="rememberMe" />
            </div>
            <MudButton ButtonType="ButtonType.Submit" >Logg inn</MudButton>
    </form>
        <EditForm Model="@loginModel" OnValidSubmit="Login">
        <DataAnnotationsValidator/>
        <MudTextField Label="Username" @bind-Value="loginModel.Username" For="(() => loginModel.Username)" />
        <MudTextField Label="Password" @bind-Value="loginModel.Password" For="(() => loginModel.Password)" />
        <MudCheckBox @bind-Checked="loginModel.RememberMe" For="(() => loginModel.RememberMe)" />

        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Login">Log in</MudButton>
        <MudButton Color="Color.Primary" OnClick="Close">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
        public bool RememberMe { get; set; } = true;
    }
    private LoginModel loginModel = new();
    public EditContext editContext;

    void Close() => MudDialog.Close(DialogResult.Ok(true));

        protected override void OnInitialized()
    {
        loginModel = new()
        {
            Username = "",
            Password = "",
            RememberMe = true
        };

        editContext = new EditContext(loginModel);
    }

    public async Task Login()
    {
        await AccountService.SignIn(loginModel.Username, loginModel.Password, loginModel.RememberMe);
    }
}